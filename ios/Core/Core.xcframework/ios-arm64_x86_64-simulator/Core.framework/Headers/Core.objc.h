// Objective-C API for talking to core Go package.
//   gobind -lang=objc core
//
// File is generated by gobind. Do not edit.

#ifndef __Core_H__
#define __Core_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class CoreAndroidPoint;
@class CoreProtectedDialer;
@protocol CoreAndroidVPNService;
@class CoreAndroidVPNService;
@protocol CoreApplePrinter;
@class CoreApplePrinter;
@protocol CoreAppleTunInterface;
@class CoreAppleTunInterface;

@protocol CoreAndroidVPNService <NSObject>
- (long)setup:(NSString* _Nullable)Conf;
- (BOOL)vpnProtect:(long)p0;
@end

@protocol CoreApplePrinter <NSObject>
- (void)applePrint:(NSString* _Nullable)log;
@end

@protocol CoreAppleTunInterface <NSObject>
- (long)writePacket:(NSData* _Nullable)payload;
@end

/**
 * AndroidPoint V2Ray Point Server
This is territory of Go, so no getter and setters!
 */
@interface CoreAndroidPoint : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewAndroidPoint new AndroidPoint
 */
- (nullable instancetype)init:(id<CoreAndroidVPNService> _Nullable)s adns:(BOOL)adns;
@property (nonatomic) id<CoreAndroidVPNService> _Nullable supportSet;
// skipped field AndroidPoint.Vpoint with unsupported type: *github.com/xtls/xray-core/core.Instance

@property (nonatomic) BOOL isRunning;
@property (nonatomic) BOOL asyncResolve;
- (int64_t)queryStatistics:(NSString* _Nullable)tag direct:(NSString* _Nullable)direct;
- (void)setConfiguration:(NSString* _Nullable)configuration node:(NSString* _Nullable)node;
/**
 * RunLoop Run V2Ray main loop
 */
- (BOOL)startVPN:(NSString* _Nullable)url error:(NSError* _Nullable* _Nullable)error;
/**
 * StopLoop Stop V2Ray main loop
 */
- (BOOL)stopVPN:(NSError* _Nullable* _Nullable)error;
- (void)writeIPPacket:(NSData* _Nullable)ipPacket length:(long)length;
@end

/**
 * ProtectedDialer ...
 */
@interface CoreProtectedDialer : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped method ProtectedDialer.DestIpAddress with unsupported parameter or return types

// skipped method ProtectedDialer.Dial with unsupported parameter or return types

- (BOOL)isVServerReady;
// skipped method ProtectedDialer.PrepareDomain with unsupported parameter or return types

- (void)prepareResolveChan;
// skipped method ProtectedDialer.ResolveChan with unsupported parameter or return types

- (BOOL)vpnProtect:(long)p0;
@end

FOUNDATION_EXPORT NSString* _Nonnull CoreChangeURL(NSData* _Nullable configuration, NSString* _Nullable payload);

/**
 * CheckVersionX string
This func will return libv2ray binding version and V2Ray version used.
 */
FOUNDATION_EXPORT NSString* _Nonnull CoreCheckVersionX(void);

FOUNDATION_EXPORT NSString* _Nonnull CoreGetUsing(void);

FOUNDATION_EXPORT NSString* _Nonnull CoreGetV2Env(void);

FOUNDATION_EXPORT NSString* _Nonnull CoreGetVersion(void);

/**
 * InitV2Env set v2 asset path
 */
FOUNDATION_EXPORT void CoreInitV2Env(NSString* _Nullable envPath);

/**
 * NewAndroidPoint new AndroidPoint
 */
FOUNDATION_EXPORT CoreAndroidPoint* _Nullable CoreNewAndroidPoint(id<CoreAndroidVPNService> _Nullable s, BOOL adns);

FOUNDATION_EXPORT int64_t CoreQueryStatistics(NSString* _Nullable tag, NSString* _Nullable direct);

FOUNDATION_EXPORT void CoreRegisterAppleNetworkInterface(id<CoreAppleTunInterface> _Nullable packetFlow);

FOUNDATION_EXPORT void CoreSetApplePrinter(id<CoreApplePrinter> _Nullable printer);

// skipped function StartInstance with unsupported parameter or return types


FOUNDATION_EXPORT NSString* _Nonnull CoreStartVPN(NSData* _Nullable configuration, NSString* _Nullable url);

FOUNDATION_EXPORT void CoreStopVPN(void);

FOUNDATION_EXPORT void CoreWriteAppleNetworkInterfacePacket(NSData* _Nullable data);

@class CoreAndroidVPNService;

@class CoreApplePrinter;

@class CoreAppleTunInterface;

/**
 * AndroidVPNService To support Android VPN mode
 */
@interface CoreAndroidVPNService : NSObject <goSeqRefInterface, CoreAndroidVPNService> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (long)setup:(NSString* _Nullable)Conf;
- (BOOL)vpnProtect:(long)p0;
@end

@interface CoreApplePrinter : NSObject <goSeqRefInterface, CoreApplePrinter> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)applePrint:(NSString* _Nullable)log;
@end

@interface CoreAppleTunInterface : NSObject <goSeqRefInterface, CoreAppleTunInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (long)writePacket:(NSData* _Nullable)payload;
@end

#endif
